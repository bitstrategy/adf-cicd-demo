{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "数据工厂名称",
			"defaultValue": "aaslab"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "“AzureBlobStorage1”的“connectionString”的安全字符串"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "“AzureSqlDatabase1”的“connectionString”的安全字符串"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "“SqlServer1”的“connectionString”的安全字符串"
		},
		"aaslab_azure_sql_connectionString": {
			"type": "secureString",
			"metadata": "“aaslab_azure_sql”的“connectionString”的安全字符串"
		},
		"aaslab_databricks_password": {
			"type": "secureString",
			"metadata": "“aaslab_databricks”的“password”的安全字符串"
		},
		"aaslab_deltalake_accessToken": {
			"type": "secureString",
			"metadata": "“aaslab_deltalake”的“accessToken”的安全字符串"
		},
		"aasmysql_connectionString": {
			"type": "secureString",
			"metadata": "“aasmysql”的“connectionString”的安全字符串"
		},
		"aasstorage_accountKey": {
			"type": "secureString",
			"metadata": "“aasstorage”的“accountKey”的安全字符串"
		},
		"adf_repo_connectionString": {
			"type": "secureString",
			"metadata": "“adf_repo”的“connectionString”的安全字符串"
		},
		"az_databricks_password": {
			"type": "secureString",
			"metadata": "“az_databricks”的“password”的安全字符串"
		},
		"blobtemplate_connectionString": {
			"type": "secureString",
			"metadata": "“blobtemplate”的“connectionString”的安全字符串"
		},
		"nanbintoken_accessToken": {
			"type": "secureString",
			"metadata": "“nanbintoken”的“accessToken”的安全字符串"
		},
		"nonspark_accessToken": {
			"type": "secureString",
			"metadata": "“nonspark”的“accessToken”的安全字符串"
		},
		"aaslab_databricks_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "adb-703617936550726.2.databricks.azure.cn"
		},
		"aaslab_databricks_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "token"
		},
		"aaslab_keyvault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://aaslab.vault.azure.cn/"
		},
		"aasstorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://aasstorage.dfs.core.chinacloudapi.cn"
		},
		"az_databricks_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "adb-6762076916997835.3.databricks.azure.cn"
		},
		"az_databricks_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "token"
		},
		"rest_get_weather_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.seniverse.com/v3/weather/now.json?key=ScB4EUZrAvDaocug3&location=shanghai&language=zh-Hans&unit=c"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Dependency')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "s1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "s2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "s1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "s3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "f1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "s2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "s3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "f1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "s4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "f1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "f2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "f1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "f2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "s5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "f1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "s6",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "s5",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-07T05:01:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/s1')]",
				"[concat(variables('factoryId'), '/pipelines/s2')]",
				"[concat(variables('factoryId'), '/pipelines/s3')]",
				"[concat(variables('factoryId'), '/pipelines/f1')]",
				"[concat(variables('factoryId'), '/pipelines/s4')]",
				"[concat(variables('factoryId'), '/pipelines/f2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rerun from point of failure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "s1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "s2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "s1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "s3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "f1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "s2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "s3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "s4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "f1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-07T05:01:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/s1')]",
				"[concat(variables('factoryId'), '/pipelines/s2')]",
				"[concat(variables('factoryId'), '/pipelines/s3')]",
				"[concat(variables('factoryId'), '/pipelines/s4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adb1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run n1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/Jobs/n1"
						},
						"linkedServiceName": {
							"referenceName": "msi_job",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run n2",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/Jobs/n2"
						},
						"linkedServiceName": {
							"referenceName": "msi_job",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-07T09:30:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msi_job')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adb_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/AZ/env_setup",
							"libraries": [
								{
									"whl": ""
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "aas_adb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T12:51:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aas_adb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_to_azure_mysql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "res_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "biz_city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "biz_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "apply_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apply_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_partia",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_partia",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "aduit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "aduit",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "spec",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "spec",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "check_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "check_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "first_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "first_commit_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "check_person",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "check_person",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_check",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_check",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "check_photo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "check_photo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "plan_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "actual_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "change_photo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_photo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_result",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_result",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_comment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_comment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pms_cm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pms_cm",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "p_level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "p_level",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "score",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "p_score",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "p_amt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "p_amt",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "project_director",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_director",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "project_engineer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_engineer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_pm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_pm",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "complete_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "complete_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "open_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "open_date",
											"type": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "se",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "aasmysql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-24T11:51:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/se')]",
				"[concat(variables('factoryId'), '/datasets/aasmysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/archive_excel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "GR55",
									"wildcardFileName": "t1.xlsx",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "archive",
								"type": "DatasetReference",
								"parameters": {
									"CONTAINER_NAME": "inbound",
									"FOLDER_NAME": "GR55"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "archive",
								"type": "DatasetReference",
								"parameters": {
									"CONTAINER_NAME": "archive",
									"FOLDER_NAME": "GR55"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-03T09:35:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/archive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avro_to_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AvroSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "*",
									"wildcardFileName": "*.avro",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "aasstorage",
										"type": "LinkedServiceReference"
									},
									"path": "aasbase/log"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SequenceNumber",
											"type": "Int64",
											"physicalType": "long"
										},
										"sink": {
											"name": "SequenceNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Offset",
											"type": "String",
											"physicalType": "string"
										},
										"sink": {
											"name": "Offset",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EnqueuedTimeUtc",
											"type": "String",
											"physicalType": "string"
										},
										"sink": {
											"name": "EnqueuedTimeUtc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SystemProperties",
											"physicalType": "map"
										},
										"sink": {
											"name": "SystemProperties",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Properties",
											"physicalType": "map"
										},
										"sink": {
											"name": "Properties",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Body",
											"physicalType": "null | bytes"
										},
										"sink": {
											"name": "Body",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "avro_demo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sys_tables_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-12T14:13:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/avro_demo')]",
				"[concat(variables('factoryId'), '/datasets/sys_tables_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuesql_to_azuresql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM t2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azuresql_dummy",
								"type": "DatasetReference",
								"parameters": {
									"TABLE_NAME": "t2"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azuresql_t2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-18T08:48:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azuresql_dummy')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_t2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_to_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM sys.tables",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "aasstorage",
										"type": "LinkedServiceReference"
									},
									"path": "aasbase/log"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "object_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "principal_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "schema_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "parent_object_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "create_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "modify_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_ms_shipped",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_published",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_schema_published",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "lob_data_space_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "lob_data_space_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "filestream_data_space_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "filestream_data_space_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "max_column_id_used",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "max_column_id_used",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "lock_on_bulk_load",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lock_on_bulk_load",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "uses_ansi_nulls",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "uses_ansi_nulls",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_replicated",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_replicated",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "has_replication_filter",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "has_replication_filter",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_merge_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_merge_published",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_sync_tran_subscribed",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_sync_tran_subscribed",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "has_unchecked_assembly_data",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "has_unchecked_assembly_data",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "text_in_row_limit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "text_in_row_limit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "large_value_types_out_of_row",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "large_value_types_out_of_row",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_tracked_by_cdc",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_tracked_by_cdc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "lock_escalation",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "lock_escalation",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "lock_escalation_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "lock_escalation_desc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_filetable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_filetable",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_memory_optimized",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_memory_optimized",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "durability",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "durability",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "durability_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "durability_desc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "temporal_type",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "temporal_type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "temporal_type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "temporal_type_desc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "history_table_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "history_table_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_remote_data_archive_enabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_remote_data_archive_enabled",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_external",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_external",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "history_retention_period",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "history_retention_period",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "history_retention_period_unit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "history_retention_period_unit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "history_retention_period_unit_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "history_retention_period_unit_desc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_node",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_node",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "is_edge",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_edge",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "data_retention_period",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "data_retention_period",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "data_retention_period_unit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "data_retention_period_unit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "data_retention_period_unit_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "data_retention_period_unit_desc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ledger_type",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ledger_type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ledger_type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ledger_type_desc",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ledger_view_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ledger_view_id",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azuresql_dummy",
								"type": "DatasetReference",
								"parameters": {
									"TABLE_NAME": "t2"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sys_tables_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-18T08:48:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azuresql_dummy')]",
				"[concat(variables('factoryId'), '/datasets/sys_tables_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_pc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pk",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "market",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "market",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "apply_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apply_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "biz_model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "biz_model",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "desgin_model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "desgin_model",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_jiameng",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_jiameng",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "modify_range",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "modify_range",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "floor",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "floor",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_jiaceng",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_jiaceng",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actual_seat",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_seat",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "actual_area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_area",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "k_area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "k_area",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "c_area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "c_area",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "complete_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "complete_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "open_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "open_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "close_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "close_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "commit_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "design_company",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "design_company",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "imp_company",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "imp_company",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pms",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pms",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qss",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qss",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "change_order_status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_order_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "change_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "chagne_part",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "chagne_part",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "plan_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "change_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sub_item",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sub_item",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "change_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "change_reason2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_reason2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_inc_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_inc_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_de_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_de_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_direct_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_direct_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "com_inc_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "com_inc_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "com_de_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "com_de_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "com_direct_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "com_direct_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "qs_inc_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_inc_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs_de_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_de_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs_direct_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_direct_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "order_status2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_status2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "plan_change_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_change_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "qs_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "qss_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qss_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "pj_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_commit_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_pms_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_pms_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_cm_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_cm_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_pe_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_pe_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_pms_date2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_pms_date2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_cm_date2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_cm_date2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js_com_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js_com_commit_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js_pe_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js_pe_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js_pms_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js_pms_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bj_change_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bj_change_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bj_qs_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bj_qs_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bj_qss_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bj_qss_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js2_com_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js2_com_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js2_pe_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js2_pe_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js2_pms_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js2_pms_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "jsb_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "jsb_commit_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "jsb_qs_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "jsb_qs_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "jsb_qss_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "jsb_qss_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "project_timely",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_timely",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_reject_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pm_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pm_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pms_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pms_reject_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_reject_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qss_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qss_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qss_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qss_reject_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cm_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cm_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cm_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cm_reject_reason",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_pc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sql_pc",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "workspace"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-15T08:14:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_pc')]",
				"[concat(variables('factoryId'), '/datasets/sql_pc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_qm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "res_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "biz_city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "biz_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "apply_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apply_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_partia",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_partia",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mgt_mode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mgt_mode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "aduit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "aduit",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "spec",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "spec",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "check_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "check_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "first_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "first_commit_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "check_person",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "check_person",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_check",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_check",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "plan_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "actual_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "review_result",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_result",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_comment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_comment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pms_cm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pms_cm",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "p_level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "p_level",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "score",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "score",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "project_director",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_director",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "project_engineer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_engineer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_pm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_pm",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "complete_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "complete_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "open_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "open_date",
											"type": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_qm",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "qm",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "workspace"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-28T13:45:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_qm')]",
				"[concat(variables('factoryId'), '/datasets/qm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "error_handling",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "error_handling",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"TABLE_NAME": "t2"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-18T08:48:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/error_handling')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delta_to_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "aaslab_deltalake",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "t1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "t1",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "parquet1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-06T12:52:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/aaslab_deltalake')]",
				"[concat(variables('factoryId'), '/datasets/parquet1')]",
				"[concat(variables('factoryId'), '/datasets/T1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "job_list",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "job_list_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "s2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "s2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/Jobs/hello_world"
						},
						"linkedServiceName": {
							"referenceName": "nonspark",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-07T05:01:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/job_list')]",
				"[concat(variables('factoryId'), '/datasets/job_list_parquet')]",
				"[concat(variables('factoryId'), '/pipelines/s2')]",
				"[concat(variables('factoryId'), '/linkedServices/nonspark')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/Jobs/hello_world"
						},
						"linkedServiceName": {
							"referenceName": "nonspark",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-23T13:38:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nonspark')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/Jobs/hello_world"
						},
						"linkedServiceName": {
							"referenceName": "nanbintoken",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-24T06:16:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nanbintoken')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/etl_template')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Started",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_ETL_LOG]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": null,
									"type": "String"
								},
								"ETL_LAYER": {
									"value": "ODS",
									"type": "String"
								},
								"ETL_PIPELINE_NAME": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"ETL_RUN_ID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOG_STATUS": {
									"value": "S",
									"type": "String"
								},
								"ETL_ARG": {
									"value": {
										"value": "@pipeline().parameters.DS_TEMPLATE_NAME",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "aaslab_azure_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ETL Started",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "excel_to_azure_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DS_TEMPLATE_NAME": {
									"value": "@pipeline().parameters.DS_TEMPLATE_NAME",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data processing failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Data processing",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Data processing').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": "10086"
						}
					},
					{
						"name": "ETL Succeeded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Data processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_ETL_LOG]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": null,
									"type": "String"
								},
								"ETL_LAYER": {
									"value": null,
									"type": "String"
								},
								"ETL_PIPELINE_NAME": {
									"value": null,
									"type": "String"
								},
								"ETL_RUN_ID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOG_STATUS": {
									"value": "C",
									"type": "String"
								},
								"ETL_ARG": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "aaslab_azure_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ETL Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Data processing failed",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_ETL_LOG]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": {
										"value": "@{activity('Data processing failed').output.errorCode}: @{activity('Data processing failed').output.message}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ETL_LAYER": {
									"value": null,
									"type": "String"
								},
								"ETL_PIPELINE_NAME": {
									"value": null,
									"type": "String"
								},
								"ETL_RUN_ID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOG_STATUS": {
									"value": "F",
									"type": "String"
								},
								"ETL_ARG": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "aaslab_azure_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Mail notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ETL Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.chinaeast2.logic.azure.cn:443/workflows/8acc34e34cb54f5f8a484ea6af352095/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9PlTrGGfOl9H_97IIisR4b7kHPjIxaO33IBbsjyTbgc",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"message\" : \"@{activity('Data processing failed').output.errorCode}: @{activity('Data processing failed').output.message}\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\"\n   \n   }",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DS_TEMPLATE_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-15T04:44:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aaslab_azure_sql')]",
				"[concat(variables('factoryId'), '/pipelines/excel_to_azure_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/excel_to_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "aasstorage",
										"type": "LinkedServiceReference"
									},
									"path": "aasbase/log"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "bw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sys_tables_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-07T09:45:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bw')]",
				"[concat(variables('factoryId'), '/datasets/sys_tables_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/excel_to_azure_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Excel to DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup data source configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_FOLDER_PATTERN",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_FILE_PATTERN",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE mio.@{activity('Lookup data source configuration').output.firstRow.SINK_TABLE_NAME}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "aasstorage",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "excel_data_source",
								"type": "DatasetReference",
								"parameters": {
									"SOURCE_CONTAINER_NAME": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_CONTAINER_NAME",
										"type": "Expression"
									},
									"SOURCE_COMPRESSION_TYPE": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_COMPRESSION_TYPE",
										"type": "Expression"
									},
									"SOURCE_SHEET_NAME": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_SHEET_NAME",
										"type": "Expression"
									},
									"SOURCE_RANGE": {
										"value": "\"\"",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azuresql_dummy",
								"type": "DatasetReference",
								"parameters": {
									"TABLE_NAME": "@activity('Lookup data source configuration').output.firstRow.SINK_TABLE_NAME"
								}
							}
						]
					},
					{
						"name": "Lookup data source configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT SOURCE_CONTAINER_NAME,SOURCE_FOLDER_PATTERN, SOURCE_FILE_PATTERN, SOURCE_SHEET_NAME, SOURCE_COMPRESSION_TYPE, SINK_TABLE_NAME\nFROM mio.C_DATA_SOURCE\nWHERE DS_TEMPLATE_NAME = '@{pipeline().parameters.DS_TEMPLATE_NAME}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_t2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DS_TEMPLATE_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-24T11:30:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/excel_data_source')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_dummy')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_t2')]",
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/f1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"message": "Not Found",
							"errorCode": "404"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-20T04:52:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/f2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"message": "Divide Zero",
							"errorCode": "406"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-20T04:53:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/foreach_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.loop_list",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "v1",
										"value": {
											"value": "@string(item()) ",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"loop_list": {
						"type": "array",
						"defaultValue": [
							1,
							2
						]
					}
				},
				"variables": {
					"v1": {
						"type": "String"
					}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T12:51:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lvl1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-07T05:01:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/s2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lvl2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "lvl1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-23T13:45:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/lvl1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nopub')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/ACL_demo"
						},
						"linkedServiceName": {
							"referenceName": "msi_acl_cluster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-02T12:52:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msi_acl_cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 15
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-08T16:41:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup data source configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@SELECT SOURCE_CONTAINER_NAME,SOURCE_FOLDER_PATTERN, SOURCE_FILE_PATTERN, SOURCE_SHEET_NAME, SOURCE_COMPRESSION_TYPE, SINK_TABLE_NAME\nFROM mio.C_DATA_SOURCE\nWHERE DS_TEMPLATE_NAME = pipeline().parameters.DS_TEMPLATE_NAME",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_t2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup data source configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_FOLDER_PATTERN",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_FILE_PATTERN",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE mio.@{activity('Lookup data source configuration').output.firstRow.SINK_TABLE_NAME}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "excel_data_source_kktest",
								"type": "DatasetReference",
								"parameters": {
									"SOURCE_CONTAINER_NAME": "@activity('Lookup data source configuration').output.firstRow.SOURCE_CONTAINER_NAME",
									"SOURCE_COMPRESSION_TYPE": "@activity('Lookup data source configuration').output.firstRow.SOURCE_COMPRESSION_TYPE",
									"SOURCE_SHEET_NAME": "@activity('Lookup data source configuration').output.firstRow.SOURCE_SHEET_NAME",
									"SOURCE_RANGE": "“”"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_sql_dummy_kktest",
								"type": "DatasetReference",
								"parameters": {
									"TABLE_NAME": "@activity('Lookup data source configuration').output.firstRow.SINK_TABLE_NAME"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DS_TEMPLATE_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "kktest"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-24T01:49:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azuresql_t2')]",
				"[concat(variables('factoryId'), '/datasets/excel_data_source_kktest')]",
				"[concat(variables('factoryId'), '/datasets/Azure_sql_dummy_kktest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_kktest3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "file_source",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[S_kaikaitest3]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kk_csvtest1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_kktest3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "kktest"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-09T10:21:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/kk_csvtest1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_kktest3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinekktest1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blobexcelkktest1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blobkktest2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "kktest"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-23T06:40:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/blobexcelkktest1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/blobkktest2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_api_to_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Weather",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "weather_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stg_weather",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T12:51:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/weather_json')]",
				"[concat(variables('factoryId'), '/datasets/stg_weather')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-20T11:28:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/s2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1, 3)",
								"type": "Expression"
							},
							"batchCount": 3,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "v1",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"v1": {
						"type": "String"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-07T05:01:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/s3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-20T04:51:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/s4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-20T04:51:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/spark_to_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SparkSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_databricks",
								"type": "DatasetReference",
								"parameters": {
									"table_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "delta_stg",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									},
									"file_name": {
										"value": "@concat( pipeline().parameters.table_name, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"table_name": {
						"type": "string",
						"defaultValue": "dm_td_ins"
					}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-29T02:45:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_databricks')]",
				"[concat(variables('factoryId'), '/datasets/delta_stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tableau_refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tableau Sign In",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Password in Key Vault",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().parameters.BASE_URL}/auth/signin",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"Accept": "application/json"
							},
							"body": {
								"credentials": {
									"name": "Jcathy",
									"password": "@{activity('Get Password in Key Vault').output.value}",
									"site": {
										"contentUrl": ""
									}
								}
							},
							"disableCertValidation": true
						}
					},
					{
						"name": "Set site id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Tableau Sign In",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "site_id",
							"value": {
								"value": "@activity('Tableau Sign In').output.credentials.site.id\r\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set token",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Tableau Sign In",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('Tableau Sign In').output.credentials.token\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Tableau Get workbook id",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set site id",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().parameters.BASE_URL}/sites/@{variables('site_id')}/workbooks?filter=name:eq:@{pipeline().parameters.WORKBOOK_NAME}",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Content-Type": "application/json",
								"Accept": "application/json",
								"X-Tableau-Auth": {
									"value": "@variables('token')",
									"type": "Expression"
								}
							},
							"body": "",
							"disableCertValidation": true
						}
					},
					{
						"name": "Tableau Refresh data source",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Identify task",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().parameters.BASE_URL}/sites/@{variables('site_id')}/tasks/extractRefreshes/@{activity('Identify task').output.Value[0].extractRefresh.id}/runNow",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"X-Tableau-Auth": {
									"value": "@variables('token')",
									"type": "Expression"
								},
								"Accept": "application/xml",
								"Content-Type": "application/xml"
							},
							"body": "<tsRequest></tsRequest>",
							"disableCertValidation": false
						}
					},
					{
						"name": "Identify task",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Tableau Get workbook id",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Tableau Get extract refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tableau Get extract refreshes').output.tasks.task",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(\nequals(item().extractRefresh.schedule.name,  pipeline().parameters.SCHEDULE_NAME),\nequals(item().extractRefresh.workbook.id, activity('Tableau Get workbook id').output.workbooks.workbook[0].id )\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Tableau Get extract refreshes",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set site id",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().parameters.BASE_URL}/sites/@{variables('site_id')}/tasks/extractRefreshes",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Content-Type": "application/json",
								"Accept": "application/json",
								"X-Tableau-Auth": {
									"value": "@variables('token')",
									"type": "Expression"
								}
							},
							"body": "",
							"disableCertValidation": true
						}
					},
					{
						"name": "Get Password in Key Vault",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://aaslab.vault.azure.cn/secrets/tableau-password/0c79507fb3644c2f8a30b37d55abf8a6?api-version=7.0",
							"method": "GET",
							"headers": {},
							"body": {
								"credentials": {
									"name": "klong4",
									"password": "Gile@d2020",
									"site": {
										"contentUrl": "sprint"
									}
								}
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.cn"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BASE_URL": {
						"type": "string",
						"defaultValue": "http://10.184.16.220/api/3.7"
					},
					"WORKBOOK_NAME": {
						"type": "string"
					},
					"SCHEDULE_NAME": {
						"type": "string"
					}
				},
				"variables": {
					"site_id": {
						"type": "String"
					},
					"token": {
						"type": "String"
					}
				},
				"folder": {
					"name": "test"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-27T07:27:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tableau_rest_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sign In",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Password in Key Vault",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://tableau-test.gileadchina.cn/api/3.4/auth/signin",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"Accept": "application/json"
							},
							"body": {
								"value": "{\"credentials\":{\"name\":\"klong4\",\"password\":\"@{activity('Get Password in Key Vault').output.value}\",\"site\":{\"contentUrl\":\"sprint\"}}}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set token",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Sign In",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('Sign In').output.credentials.token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set site id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Sign In",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "site_id",
							"value": {
								"value": "@activity('Sign In').output.credentials.site.id",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Tableau site user list",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set token",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set site id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://tableau-test.gileadchina.cn/api/3.4/sites/', variables('site_id') ,'/users')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"X-Tableau-Auth": {
									"value": "@variables('token')",
									"type": "Expression"
								},
								"Accept": "application/json"
							},
							"body": ""
						}
					},
					{
						"name": "Get Password in Key Vault",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://aaslab.vault.azure.cn/secrets/tableau-password/0c79507fb3644c2f8a30b37d55abf8a6?api-version=7.0",
							"method": "GET",
							"headers": {},
							"body": {
								"credentials": {
									"name": "klong4",
									"password": "Gile@d2020",
									"site": {
										"contentUrl": "sprint"
									}
								}
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.cn"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BASE_URL": {
						"type": "string"
					}
				},
				"variables": {
					"site_id": {
						"type": "String"
					},
					"token": {
						"type": "String"
					}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-27T07:21:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/validation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT V1 FROM mio.T1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_t2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup1').output.firstRow.V1,'Error' )",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Mail notification",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-23.chinaeast2.logic.azure.cn:443/workflows/8acc34e34cb54f5f8a484ea6af352095/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9PlTrGGfOl9H_97IIisR4b7kHPjIxaO33IBbsjyTbgc",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"message\" : \"Hello\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\"\n\n\n   \n   }",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "year_month",
							"value": {
								"value": "@formatDateTime(utcNow())",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"year_month": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-28T07:28:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azuresql_t2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "channel",
						"type": "nvarchar"
					},
					{
						"name": "level",
						"type": "nvarchar"
					},
					{
						"name": "datavalue",
						"type": "nvarchar"
					},
					{
						"name": "category",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "S_kaikaitest1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Lev.2",
						"type": "nvarchar"
					},
					{
						"name": "Lev.3",
						"type": "nvarchar"
					},
					{
						"name": "Lev.4",
						"type": "nvarchar"
					},
					{
						"name": "Lev.5",
						"type": "nvarchar"
					},
					{
						"name": "Risk系统确定建立的版本",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "S_kaikaitest2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_kktest3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Lev2",
						"type": "nvarchar"
					},
					{
						"name": "Lev3",
						"type": "nvarchar"
					},
					{
						"name": "Lev4",
						"type": "nvarchar"
					},
					{
						"name": "Lev5",
						"type": "nvarchar"
					},
					{
						"name": "file_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "S_kaikaitest3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_sql_dummy_kktest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aaslab_azure_sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aaslab_azure_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adf_repo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "t1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adf_repo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aaslab_databricks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aaslab_databricks",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SparkObject",
				"schema": [],
				"typeProperties": {
					"schema": "foresight_db",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aaslab_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aaslab_deltalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aaslab_deltalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string",
						"defaultValue": "dm_td_ins"
					}
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "work",
					"table": {
						"value": "t1",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aaslab_deltalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aasmysql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasmysql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`se`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasmysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/archive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CONTAINER_NAME": {
						"type": "string"
					},
					"FOLDER_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FOLDER_NAME",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().CONTAINER_NAME",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avro_demo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "aaslab/eh1",
						"fileSystem": "datastream"
					}
				},
				"schema": {
					"type": "record",
					"name": "Microsoft.ServiceBus.Messaging.EventData",
					"fields": [
						{
							"name": "SequenceNumber",
							"type": "long"
						},
						{
							"name": "Offset",
							"type": "string"
						},
						{
							"name": "EnqueuedTimeUtc",
							"type": "string"
						},
						{
							"name": "SystemProperties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes"
								]
							}
						},
						{
							"name": "Properties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes",
									"null"
								]
							}
						},
						{
							"name": "Body",
							"type": [
								"null",
								"bytes"
							]
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_databricks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_databricks",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SparkObject",
				"schema": [],
				"typeProperties": {
					"schema": "foresight_db",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_dummy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aaslab_azure_sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "mio",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aaslab_azure_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_t2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aaslab_azure_sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "mio",
					"table": "T2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aaslab_azure_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobexcelkktest1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "层级对照表",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test111.xlsx",
						"folderPath": "kktest2",
						"container": "inbound"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobkktest2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "LFG报表自定义的",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test111.xlsx",
						"folderPath": "kktest2",
						"container": "inbound"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Lev2",
						"type": "String"
					},
					{
						"name": "Lev3",
						"type": "String"
					},
					{
						"name": "Lev4",
						"type": "String"
					},
					{
						"name": "Lev5",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blogkktest3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "LFG报表自定义的",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test2.xlsx",
						"folderPath": "kktest2",
						"container": "inbound"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "lev2",
						"type": "String"
					},
					{
						"name": "lev3",
						"type": "String"
					},
					{
						"name": "lev4",
						"type": "String"
					},
					{
						"name": "lev5",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "bw.xlsx",
						"fileSystem": "aasbase"
					},
					"range": "",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_pc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "project_change.csv",
						"folderPath": "bronze",
						"fileSystem": "aasbase"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_qm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "qm.csv",
						"folderPath": "bronze",
						"fileSystem": "aasbase"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delta_stg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('tmp/' , dataset().folder_name)",
							"type": "Expression"
						},
						"fileSystem": "aasbase"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\r",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/excel_data_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SOURCE_CONTAINER_NAME": {
						"type": "string"
					},
					"SOURCE_COMPRESSION_TYPE": {
						"type": "string"
					},
					"SOURCE_SHEET_NAME": {
						"type": "string"
					},
					"SOURCE_RANGE": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().SOURCE_SHEET_NAME",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().SOURCE_CONTAINER_NAME",
							"type": "Expression"
						}
					},
					"range": {
						"value": "@dataset().SOURCE_RANGE",
						"type": "Expression"
					},
					"firstRowAsHeader": true,
					"compression": {
						"type": {
							"value": "@dataset().SOURCE_COMPRESSION_TYPE",
							"type": "Expression"
						},
						"level": "Optimal"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/excel_data_source_kktest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SOURCE_CONTAINER_NAME": {
						"type": "string"
					},
					"SOURCE_COMPRESSION_TYPE": {
						"type": "string"
					},
					"SOURCE_SHEET_NAME": {
						"type": "string"
					},
					"SOURCE_RANGE": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().SOURCE_SHEET_NAME",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().SOURCE_CONTAINER_NAME",
							"type": "Expression"
						}
					},
					"range": {
						"value": "@dataset().SOURCE_RANGE",
						"type": "Expression"
					},
					"firstRowAsHeader": false,
					"compression": {
						"type": {
							"value": "@dataset().SOURCE_COMPRESSION_TYPE",
							"type": "Expression"
						},
						"level": "Optimal"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/job_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adf_repo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "JOB",
						"type": "nvarchar"
					},
					{
						"name": "PARENT_JOB",
						"type": "nvarchar"
					},
					{
						"name": "FAILED_RUN",
						"type": "char"
					},
					{
						"name": "IS_TIME_SCHEDULED",
						"type": "char"
					},
					{
						"name": "START_HOUR",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "START_MINUTE",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "job_list"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adf_repo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/job_list_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "job_list",
						"fileSystem": "inbound"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/kk_csvtest1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test234.csv",
						"folderPath": "Test",
						"fileSystem": "inbound"
					},
					"columnDelimiter": "||$||",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "column",
						"type": "String"
					},
					{
						"name": "data",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mysql_qm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasmysql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`qm`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasmysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mysql_se')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasmysql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`se`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasmysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "t1",
						"fileSystem": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/qm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasmysql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "res_name",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "res_code",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "biz_city",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "brand",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "city",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "apply_type",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "is_partia",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "mgt_mode",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "aduit",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "spec",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "location",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "check_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "first_commit_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "check_person",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "reason",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "pe_check",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "status",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "plan_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "actual_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "change_photo",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "review_result",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "review_comment",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "pms_cm",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "review_desc",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "p_level",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "score",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "project_director",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "project_engineer",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "company_type",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "company_name",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "company_pm",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "start_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "complete_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "open_date",
						"precision": 19,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "`qm`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasmysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/se')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "se.csv",
						"folderPath": "bronze",
						"fileSystem": "aasbase"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_pc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasmysql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "pk",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "market",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "city",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "brand",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "res_name",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "res_code",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "apply_type",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "res_type",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "biz_model",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "desgin_model",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "is_jiameng",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "modify_range",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "floor",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "is_jiaceng",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "actual_seat",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "actual_area",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "k_area",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "c_area",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "start_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "complete_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "open_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "close_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "commit_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "design_company",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "imp_company",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pe",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pms",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "qs",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "qss",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "change_order_status",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "change_type",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "chagne_part",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "plan_date",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "change_desc",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "sub_item",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "change_reason",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "change_reason2",
						"precision": 232,
						"scale": 0
					},
					{
						"name": "pe_inc_desc",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pe_de_desc",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pe_direct_fee",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "com_inc_desc",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "com_de_desc",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "com_direct_fee",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "qs_inc_desc",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "qs_de_desc",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "qs_direct_fee",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "order_status2",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "plan_change_fee",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "qs_fee",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "qss_fee",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "pj_commit_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pj_pms_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pj_cm_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pj_pe_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pj_pms_date2",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pj_cm_date2",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "js_com_commit_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "js_pe_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "js_pms_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "bj_change_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "bj_qs_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "bj_qss_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "js2_com_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "js2_pe_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "js2_pms_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "jsb_commit_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "jsb_qs_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "jsb_qss_date",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "project_timely",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pe_reject_no",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pe_reject_reason",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pm_reject_no",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "pms_reject_reason",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "qs_reject_no",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "qs_reject_reason",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "qss_reject_no",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "qss_reject_reason",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "cm_reject_no",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "cm_reject_reason",
						"precision": 100,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "`project_change`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasmysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stg_weather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "shanghai.json",
						"folderPath": "bronze/weather",
						"fileSystem": "aasbase"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"location": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"country": {
												"type": "string"
											},
											"path": {
												"type": "string"
											},
											"timezone": {
												"type": "string"
											},
											"timezone_offset": {
												"type": "string"
											}
										}
									},
									"now": {
										"type": "object",
										"properties": {
											"text": {
												"type": "string"
											},
											"code": {
												"type": "string"
											},
											"temperature": {
												"type": "string"
											}
										}
									},
									"last_update": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sys_tables_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aasstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "systables.csv",
						"folderPath": "bronze",
						"fileSystem": "aasbase"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aasstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/t2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aaslab_azure_sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "V1",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "mio",
					"table": "T2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aaslab_azure_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/template')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobtemplate",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Scenario Data",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "P&L Datasource Template.xlsx",
						"container": "data"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobtemplate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weather_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rest_get_weather",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rest_get_weather')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aas_adb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-703617936550726.2.databricks.azure.cn",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/b576cca1-1304-45fb-9d2c-092dd6783357/resourceGroups/aaslab/providers/Microsoft.Databricks/workspaces/aas_databricks",
					"newClusterNodeType": "Standard_F4s",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "8.2.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aaslab_azure_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('aaslab_azure_sql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aaslab_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Spark",
				"typeProperties": {
					"host": "[parameters('aaslab_databricks_properties_typeProperties_host')]",
					"port": 443,
					"serverType": "SparkThriftServer",
					"thriftTransportProtocol": "HTTP",
					"authenticationType": "UsernameAndPassword",
					"username": "[parameters('aaslab_databricks_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('aaslab_databricks_password')]"
					},
					"httpPath": "sql/protocolv1/o/703617936550726/0512-034221-shelf112",
					"enableSsl": true,
					"useSystemTrustStore": false,
					"allowHostNameCNMismatch": false,
					"allowSelfSignedServerCert": false
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aaslab_deltalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-703617936550726.2.databricks.azure.cn",
					"clusterId": "0420-093301-376acrky",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('aaslab_deltalake_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aaslab_keyvault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('aaslab_keyvault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aasmysql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('aasmysql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aasstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('aasstorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('aasstorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_repo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('adf_repo_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Spark",
				"typeProperties": {
					"host": "[parameters('az_databricks_properties_typeProperties_host')]",
					"port": 443,
					"serverType": "SparkThriftServer",
					"thriftTransportProtocol": "HTTP",
					"authenticationType": "UsernameAndPassword",
					"username": "[parameters('az_databricks_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('az_databricks_password')]"
					},
					"httpPath": "sql/protocolv1/o/6762076916997835/0319-054017-fiend253",
					"enableSsl": true,
					"useSystemTrustStore": false,
					"allowHostNameCNMismatch": false,
					"allowSelfSignedServerCert": false
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobtemplate')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobtemplate_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/msi_acl_cluster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-703617936550726.2.databricks.azure.cn",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/b576cca1-1304-45fb-9d2c-092dd6783357/resourceGroups/aaslab/providers/Microsoft.Databricks/workspaces/aas_databricks",
					"credential": {
						"referenceName": "adbmi_cre",
						"type": "CredentialReference"
					},
					"existingClusterId": "0502-023914-rypf5z2r"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/adbmi_cre')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/msi_job')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-703617936550726.2.databricks.azure.cn",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/b576cca1-1304-45fb-9d2c-092dd6783357/resourceGroups/aaslab/providers/Microsoft.Databricks/workspaces/aas_databricks",
					"credential": {
						"referenceName": "adbmi_cre",
						"type": "CredentialReference"
					},
					"instancePoolId": "0502-015605-wells3-pool-hi9ye0m5",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/adbmi_cre')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nanbintoken')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-703617936550726.2.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('nanbintoken_accessToken')]"
					},
					"existingClusterId": "0420-093301-376acrky"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nonspark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-703617936550726.2.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('nonspark_accessToken')]"
					},
					"existingClusterId": "0420-093301-376acrky"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_get_weather')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('rest_get_weather_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 2,
						"startTime": "2022-02-16T12:20:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/error_handling')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azuresql_dummy",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azuresql_t2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM mio.T1',\n\tformat: 'query') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azuresql_dummy')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_t2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adbmi_cre')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/b576cca1-1304-45fb-9d2c-092dd6783357/resourceGroups/aaslab/providers/Microsoft.ManagedIdentity/userAssignedIdentities/adbmi"
				}
			},
			"dependsOn": []
		}
	]
}