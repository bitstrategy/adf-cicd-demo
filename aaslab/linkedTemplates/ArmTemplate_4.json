{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "数据工厂名称",
			"defaultValue": "aaslab"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy_pc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pk",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "market",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "market",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "apply_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apply_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "biz_model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "biz_model",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "desgin_model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "desgin_model",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_jiameng",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_jiameng",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "modify_range",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "modify_range",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "floor",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "floor",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_jiaceng",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_jiaceng",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actual_seat",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_seat",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "actual_area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_area",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "k_area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "k_area",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "c_area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "c_area",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "complete_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "complete_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "open_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "open_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "close_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "close_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "commit_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "design_company",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "design_company",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "imp_company",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "imp_company",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pms",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pms",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qss",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qss",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "change_order_status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_order_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "change_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "chagne_part",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "chagne_part",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "plan_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "change_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sub_item",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sub_item",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "change_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "change_reason2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "change_reason2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_inc_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_inc_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_de_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_de_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_direct_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_direct_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "com_inc_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "com_inc_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "com_de_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "com_de_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "com_direct_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "com_direct_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "qs_inc_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_inc_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs_de_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_de_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs_direct_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_direct_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "order_status2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_status2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "plan_change_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_change_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "qs_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "qss_fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qss_fee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "pj_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_commit_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_pms_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_pms_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_cm_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_cm_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_pe_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_pe_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_pms_date2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_pms_date2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pj_cm_date2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pj_cm_date2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js_com_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js_com_commit_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js_pe_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js_pe_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js_pms_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js_pms_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bj_change_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bj_change_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bj_qs_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bj_qs_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bj_qss_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bj_qss_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js2_com_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js2_com_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js2_pe_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js2_pe_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "js2_pms_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "js2_pms_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "jsb_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "jsb_commit_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "jsb_qs_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "jsb_qs_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "jsb_qss_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "jsb_qss_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "project_timely",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_timely",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_reject_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pm_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pm_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pms_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pms_reject_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qs_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qs_reject_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qss_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qss_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qss_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qss_reject_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cm_reject_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cm_reject_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cm_reject_reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cm_reject_reason",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_pc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sql_pc",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "workspace"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-15T08:14:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_qm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "res_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "res_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "res_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "biz_city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "biz_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "apply_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apply_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_partia",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_partia",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mgt_mode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mgt_mode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "aduit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "aduit",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "spec",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "spec",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "check_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "check_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "first_commit_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "first_commit_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "check_person",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "check_person",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pe_check",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pe_check",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "plan_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "actual_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "review_result",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_result",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_comment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_comment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pms_cm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pms_cm",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "review_desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "p_level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "p_level",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "score",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "score",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "project_director",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_director",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "project_engineer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_engineer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "company_pm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_pm",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "complete_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "complete_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "open_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "open_date",
											"type": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_qm",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "qm",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "workspace"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-28T13:45:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/delta_to_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "aaslab_deltalake",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "t1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "t1",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "parquet1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-06T12:52:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "job_list",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "job_list_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "s2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "s2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "s2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/Jobs/hello_world"
						},
						"linkedServiceName": {
							"referenceName": "nonspark",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-07T05:01:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/excel_to_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "aasstorage",
										"type": "LinkedServiceReference"
									},
									"path": "aasbase/log"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "bw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sys_tables_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-07T09:45:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/excel_to_azure_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Excel to DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup data source configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_FOLDER_PATTERN",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_FILE_PATTERN",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE mio.@{activity('Lookup data source configuration').output.firstRow.SINK_TABLE_NAME}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "aasstorage",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "excel_data_source",
								"type": "DatasetReference",
								"parameters": {
									"SOURCE_CONTAINER_NAME": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_CONTAINER_NAME",
										"type": "Expression"
									},
									"SOURCE_COMPRESSION_TYPE": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_COMPRESSION_TYPE",
										"type": "Expression"
									},
									"SOURCE_SHEET_NAME": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_SHEET_NAME",
										"type": "Expression"
									},
									"SOURCE_RANGE": {
										"value": "\"\"",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azuresql_dummy",
								"type": "DatasetReference",
								"parameters": {
									"TABLE_NAME": "@activity('Lookup data source configuration').output.firstRow.SINK_TABLE_NAME"
								}
							}
						]
					},
					{
						"name": "Lookup data source configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT SOURCE_CONTAINER_NAME,SOURCE_FOLDER_PATTERN, SOURCE_FILE_PATTERN, SOURCE_SHEET_NAME, SOURCE_COMPRESSION_TYPE, SINK_TABLE_NAME\nFROM mio.C_DATA_SOURCE\nWHERE DS_TEMPLATE_NAME = '@{pipeline().parameters.DS_TEMPLATE_NAME}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_t2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DS_TEMPLATE_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-24T11:30:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lvl2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "lvl1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-23T13:45:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nopub')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/needn@yzdazure.partner.onmschina.cn/ACL_demo"
						},
						"linkedServiceName": {
							"referenceName": "msi_acl_cluster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-02T12:52:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup data source configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@SELECT SOURCE_CONTAINER_NAME,SOURCE_FOLDER_PATTERN, SOURCE_FILE_PATTERN, SOURCE_SHEET_NAME, SOURCE_COMPRESSION_TYPE, SINK_TABLE_NAME\nFROM mio.C_DATA_SOURCE\nWHERE DS_TEMPLATE_NAME = pipeline().parameters.DS_TEMPLATE_NAME",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_t2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup data source configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_FOLDER_PATTERN",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@activity('Lookup data source configuration').output.firstRow.SOURCE_FILE_PATTERN",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE mio.@{activity('Lookup data source configuration').output.firstRow.SINK_TABLE_NAME}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "excel_data_source_kktest",
								"type": "DatasetReference",
								"parameters": {
									"SOURCE_CONTAINER_NAME": "@activity('Lookup data source configuration').output.firstRow.SOURCE_CONTAINER_NAME",
									"SOURCE_COMPRESSION_TYPE": "@activity('Lookup data source configuration').output.firstRow.SOURCE_COMPRESSION_TYPE",
									"SOURCE_SHEET_NAME": "@activity('Lookup data source configuration').output.firstRow.SOURCE_SHEET_NAME",
									"SOURCE_RANGE": "“”"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_sql_dummy_kktest",
								"type": "DatasetReference",
								"parameters": {
									"TABLE_NAME": "@activity('Lookup data source configuration').output.firstRow.SINK_TABLE_NAME"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DS_TEMPLATE_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "kktest"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-24T01:49:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_kktest3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "file_source",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[S_kaikaitest3]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kk_csvtest1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_kktest3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "kktest"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-09T10:21:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinekktest1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blobexcelkktest1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blobkktest2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "kktest"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-23T06:40:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_api_to_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Weather",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "weather_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stg_weather",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T12:51:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/spark_to_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SparkSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_databricks",
								"type": "DatasetReference",
								"parameters": {
									"table_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "delta_stg",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									},
									"file_name": {
										"value": "@concat( pipeline().parameters.table_name, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"table_name": {
						"type": "string",
						"defaultValue": "dm_td_ins"
					}
				},
				"folder": {
					"name": "copy_activity"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-29T02:45:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/validation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT V1 FROM mio.T1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_t2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup1').output.firstRow.V1,'Error' )",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Mail notification",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-23.chinaeast2.logic.azure.cn:443/workflows/8acc34e34cb54f5f8a484ea6af352095/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9PlTrGGfOl9H_97IIisR4b7kHPjIxaO33IBbsjyTbgc",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"message\" : \"Hello\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\"\n\n\n   \n   }",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "year_month",
							"value": {
								"value": "@formatDateTime(utcNow())",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"year_month": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-28T07:28:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/error_handling')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azuresql_dummy",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azuresql_t2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM mio.T1',\n\tformat: 'query') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "error_handling",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "error_handling",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"TABLE_NAME": "t2"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-18T08:48:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/error_handling')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/etl_template')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Started",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_ETL_LOG]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": null,
									"type": "String"
								},
								"ETL_LAYER": {
									"value": "ODS",
									"type": "String"
								},
								"ETL_PIPELINE_NAME": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"ETL_RUN_ID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOG_STATUS": {
									"value": "S",
									"type": "String"
								},
								"ETL_ARG": {
									"value": {
										"value": "@pipeline().parameters.DS_TEMPLATE_NAME",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "aaslab_azure_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ETL Started",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "excel_to_azure_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DS_TEMPLATE_NAME": {
									"value": "@pipeline().parameters.DS_TEMPLATE_NAME",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data processing failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Data processing",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Data processing').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": "10086"
						}
					},
					{
						"name": "ETL Succeeded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Data processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_ETL_LOG]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": null,
									"type": "String"
								},
								"ETL_LAYER": {
									"value": null,
									"type": "String"
								},
								"ETL_PIPELINE_NAME": {
									"value": null,
									"type": "String"
								},
								"ETL_RUN_ID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOG_STATUS": {
									"value": "C",
									"type": "String"
								},
								"ETL_ARG": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "aaslab_azure_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ETL Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Data processing failed",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_ETL_LOG]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": {
										"value": "@{activity('Data processing failed').output.errorCode}: @{activity('Data processing failed').output.message}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ETL_LAYER": {
									"value": null,
									"type": "String"
								},
								"ETL_PIPELINE_NAME": {
									"value": null,
									"type": "String"
								},
								"ETL_RUN_ID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOG_STATUS": {
									"value": "F",
									"type": "String"
								},
								"ETL_ARG": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "aaslab_azure_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Mail notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ETL Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.chinaeast2.logic.azure.cn:443/workflows/8acc34e34cb54f5f8a484ea6af352095/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9PlTrGGfOl9H_97IIisR4b7kHPjIxaO33IBbsjyTbgc",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"message\" : \"@{activity('Data processing failed').output.errorCode}: @{activity('Data processing failed').output.message}\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\"\n   \n   }",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DS_TEMPLATE_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "control_flow"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-15T04:44:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/excel_to_azure_sql')]"
			]
		}
	]
}